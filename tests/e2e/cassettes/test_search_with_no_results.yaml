interactions:
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        12,\n    \"total_tokens\": 12\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bbfc2d35cfc0-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:20 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=76D2CbgQ54oi5uVCdcz8OIkxCyUhnZy.MC7aFnt42uA-1760409860-1.0.1.1-NH4Rkrk65o6NG86t0h9A5XwesiLBnVtbHu6zx7jaYm1NLXro1H_ZceN80JfxrTaEvSM17C4gp6dQkFlBTOAhj6RRQ5fz0zlUExJA6G.S4xE;
        path=/; expires=Tue, 14-Oct-25 03:14:20 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=RJsId6f4FtfF1pbpg2k7SAMVmoUW4.Gy_L2D_etn5RE-1760409860667-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16608'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '72'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6566bf4bb9-p7zl4
      x-envoy-upstream-service-time:
      - '92'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999994'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_fdcd7937ca354b33908ba87b5864227f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=76D2CbgQ54oi5uVCdcz8OIkxCyUhnZy.MC7aFnt42uA-1760409860-1.0.1.1-NH4Rkrk65o6NG86t0h9A5XwesiLBnVtbHu6zx7jaYm1NLXro1H_ZceN80JfxrTaEvSM17C4gp6dQkFlBTOAhj6RRQ5fz0zlUExJA6G.S4xE;
        _cfuvid=RJsId6f4FtfF1pbpg2k7SAMVmoUW4.Gy_L2D_etn5RE-1760409860667-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        8,\n    \"total_tokens\": 8\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bbfd5e72cfc0-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:21 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16606'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '267'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-697997b774-xz5bl
      x-envoy-upstream-service-time:
      - '315'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999993'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_00bfcb32523a4a10b1dd82c6a312a84a
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[6414, 65185, 9353, 66074]], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '113'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        4,\n    \"total_tokens\": 4\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bc0059a5cf49-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:21 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=f7IvCqM.q0s.Lmkd61ywFhYmhbBP7NvmFE.6aMYCPNQ-1760409861-1.0.1.1-XlkWFKPkKtIcv3kW1OUc7YNZ_Ji7bmYrtIpPQygtGwQXDPtvfGXzEfq3uWu3zxU6X2bqV_Rh5.YXM7_fOF7tJUNJqbGbjoOWts5VJwx9pCU;
        path=/; expires=Tue, 14-Oct-25 03:14:21 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=Fl7TTWhFbboAbrv1IwsJTE.0GHcCb5.UyThW1M_9_u0-1760409861300-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16606'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '59'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-9d857fccf-5jrkm
      x-envoy-upstream-service-time:
      - '77'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999996'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_82c58e6a1aca4ad6846f121a2c18db5f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e403610c472385-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:33:04 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=sCt9slTtf9YECxgMz3BPbrdJDrvVsAHvu3MLfN7yLak-1760412784-1.0.1.1-YcS289_kY6UTwI97iz76e3KoLWUeCw.3vgkRGd.jjssUWZl1.C4lGdBHS8v7FKcWAcaAVHbMbwl86NVWkrjWwaXg1ZC0sXzmcXc5HAOC1Qc;
        path=/; expires=Tue, 14-Oct-25 04:03:04 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=djE6p8Sag8BF4_XSF03jIEUkFrRpKjAbDXwFw2bPmso-1760412784850-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '1'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_883f35eebfd842cdb55666c1cd9c4a1b
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=sCt9slTtf9YECxgMz3BPbrdJDrvVsAHvu3MLfN7yLak-1760412784-1.0.1.1-YcS289_kY6UTwI97iz76e3KoLWUeCw.3vgkRGd.jjssUWZl1.C4lGdBHS8v7FKcWAcaAVHbMbwl86NVWkrjWwaXg1ZC0sXzmcXc5HAOC1Qc;
        _cfuvid=djE6p8Sag8BF4_XSF03jIEUkFrRpKjAbDXwFw2bPmso-1760412784850-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e403616cba2385-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:33:04 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '2'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_fd04d86c1a864f1596334c92d2daa95c
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e4063db8d0cf12-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:35:02 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=STS.6b75AE35FT55uuSUVbtoQ.h401duvzYW5beLCwU-1760412902-1.0.1.1-Z79LVG55SwH1sYoY7hQ9sc7oG4q_jtNs5qW1ozit9GuzE3CQsFlr8prukYRCwhvjc7pvTE7BcRojZv4wX4UT.OYx83yIxT50Rw0Yi8GjHgA;
        path=/; expires=Tue, 14-Oct-25 04:05:02 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=Do2C5SviU0XLJGxq4CPnpNFBIt14sdhw2b55IkLPOPU-1760412902069-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '1'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_b36d7e9defa04f628674efe2a63609b4
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=STS.6b75AE35FT55uuSUVbtoQ.h401duvzYW5beLCwU-1760412902-1.0.1.1-Z79LVG55SwH1sYoY7hQ9sc7oG4q_jtNs5qW1ozit9GuzE3CQsFlr8prukYRCwhvjc7pvTE7BcRojZv4wX4UT.OYx83yIxT50Rw0Yi8GjHgA;
        _cfuvid=Do2C5SviU0XLJGxq4CPnpNFBIt14sdhw2b55IkLPOPU-1760412902069-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e4063e1a2bcf12-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:35:02 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '2'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_b1b3ecb46a9a41acb857e4e8857a1ea9
    status:
      code: 401
      message: Unauthorized
version: 1
