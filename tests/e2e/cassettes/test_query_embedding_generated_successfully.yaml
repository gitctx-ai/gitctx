interactions:
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        12,\n    \"total_tokens\": 12\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bba16cb0faf0-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:06 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=eHFILWlHnoLB8SbBu75g5QFGjzwx4ymi8P2V_BWN9cw-1760409846-1.0.1.1-q3iyWl_Qvld5SLFgA1G13BVwadEi06gpPa3iITLRdTRFIx4mhl4elWMGUfBm6ScKXbs3ozwJm4fEgMTXUycW7JQpiLKbyIbb1HXiBUA8Sj4;
        path=/; expires=Tue, 14-Oct-25 03:14:06 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=E8jyF2dnxauuCo3g7JRLs2C6MqoyV.r6CgeBLAhuyxA-1760409846384-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16608'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '300'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-5bc86b44d8-8qnhw
      x-envoy-upstream-service-time:
      - '328'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999994'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_d586e5dabcbc44598aed1bee0a7ba0fa
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=eHFILWlHnoLB8SbBu75g5QFGjzwx4ymi8P2V_BWN9cw-1760409846-1.0.1.1-q3iyWl_Qvld5SLFgA1G13BVwadEi06gpPa3iITLRdTRFIx4mhl4elWMGUfBm6ScKXbs3ozwJm4fEgMTXUycW7JQpiLKbyIbb1HXiBUA8Sj4;
        _cfuvid=E8jyF2dnxauuCo3g7JRLs2C6MqoyV.r6CgeBLAhuyxA-1760409846384-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        8,\n    \"total_tokens\": 8\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bba40edefaf0-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:06 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16606'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '76'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-b69d7bdb9-mdn6k
      x-envoy-upstream-service-time:
      - '93'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999993'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_5a8cb6a51b1e4aed9b5907a7bdeb6003
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[46990, 30779]], "model": "text-embedding-3-large", "dimensions":
      3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '103'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        2,\n    \"total_tokens\": 2\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bba5b8e4cecd-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:06 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=B4Ox5.j.mjLM79WtxzOiyn55MXDebKfiEzNJEa8e5QU-1760409846-1.0.1.1-CRvz2VY7QPZCexImf6sjLmDy7GF_IGOs.K1jdm7Cw6JOcR2hnBj_iqGLTZVnEa1DZ2Bot5OuBIPZbuwWZchKikOY5D0TTuypNO2qj_2eFnY;
        path=/; expires=Tue, 14-Oct-25 03:14:06 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=w3VKAyQlHEUbuRpTfXMlFCiea35wuQRNhzQOav3.b18-1760409846845-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16606'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '64'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-b69d7bdb9-z769z
      x-envoy-upstream-service-time:
      - '85'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999998'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_6e32c7f5c6cb4647ab0156cb680fc1cf
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e40338bece9450-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:32:58 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=IXZAVYIgROIOarMhO8tqOlo5lHvUmYWfRwTpHqfrqBU-1760412778-1.0.1.1-SQHaorjc_BYIZYPvaTWIjmnMWsXLEyPDAv8fw8_5_0Wjh0RbFw6cP.AuAobf4vPhnra27s6vdH27hb6v8RIf_SMGqcTIpHGzukJnpLkP0w0;
        path=/; expires=Tue, 14-Oct-25 04:02:58 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=umh3ol8yjjREoO4MdD73SFurpYfrSCEfHIXGZbj8i5Q-1760412778421-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '0'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_6a15a10f573645d38ad385aa11739259
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=IXZAVYIgROIOarMhO8tqOlo5lHvUmYWfRwTpHqfrqBU-1760412778-1.0.1.1-SQHaorjc_BYIZYPvaTWIjmnMWsXLEyPDAv8fw8_5_0Wjh0RbFw6cP.AuAobf4vPhnra27s6vdH27hb6v8RIf_SMGqcTIpHGzukJnpLkP0w0;
        _cfuvid=umh3ol8yjjREoO4MdD73SFurpYfrSCEfHIXGZbj8i5Q-1760412778421-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e403393f549450-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:32:58 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '2'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_a6164848926b473985a29828e51b0fa8
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e40621ade6fb38-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:34:57 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=jvbf9mSISj.11AgISPQLVjLAf8_Jx6goO_c_e1Yom2w-1760412897-1.0.1.1-yeTTO40ZxDqrMAZ392a5UQjlLd_h9ne7h_nFMs8XOQgcbfFpP7tJW2B2WtmFwApTFOE5pIV_HB9QGbSGkjUOaBI5bOqbrh6RXfbwsLUenyk;
        path=/; expires=Tue, 14-Oct-25 04:04:57 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=5OlAmCfRw1UMwRzqWvcSWBKZg2al6AWTJhK1XbNHdNs-1760412897601-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '2'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_21610cdd6d1846e48af5bed8d31949c6
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=jvbf9mSISj.11AgISPQLVjLAf8_Jx6goO_c_e1Yom2w-1760412897-1.0.1.1-yeTTO40ZxDqrMAZ392a5UQjlLd_h9ne7h_nFMs8XOQgcbfFpP7tJW2B2WtmFwApTFOE5pIV_HB9QGbSGkjUOaBI5bOqbrh6RXfbwsLUenyk;
        _cfuvid=5OlAmCfRw1UMwRzqWvcSWBKZg2al6AWTJhK1XbNHdNs-1760412897601-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e406222e5efb38-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:34:57 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '1'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_28d1702ee26246e49b4df6c20e90e608
    status:
      code: 401
      message: Unauthorized
version: 1
