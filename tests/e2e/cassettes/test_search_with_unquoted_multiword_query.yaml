interactions:
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        12,\n    \"total_tokens\": 12\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bbb7e861aaa9-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:09 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=vE2IJmz0HEHXe1ren6E96hj0MEC0HdNAi5av4nDFaEM-1760409849-1.0.1.1-p036ZlLVykTkCTy_S0YyQFIw2FOW11Tny.HFK5677ss23PTyeq_PFJdRUJ1ka6uPVdqjf0pDNQO85or4ggsTmHLK1Z5J5QPFGQBCzyHfCY4;
        path=/; expires=Tue, 14-Oct-25 03:14:09 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=3BWVTWvoF15HfXrwFvTiJmLOPCVNjtg8bphPfcQxrnk-1760409849700-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16608'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '60'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-9d857fccf-mx2bt
      x-envoy-upstream-service-time:
      - '79'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999994'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_5accc61e781a4333bd4f86c59baa9981
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=vE2IJmz0HEHXe1ren6E96hj0MEC0HdNAi5av4nDFaEM-1760409849-1.0.1.1-p036ZlLVykTkCTy_S0YyQFIw2FOW11Tny.HFK5677ss23PTyeq_PFJdRUJ1ka6uPVdqjf0pDNQO85or4ggsTmHLK1Z5J5QPFGQBCzyHfCY4;
        _cfuvid=3BWVTWvoF15HfXrwFvTiJmLOPCVNjtg8bphPfcQxrnk-1760409849700-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"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\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        8,\n    \"total_tokens\": 8\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bbb8c928aaa9-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:09 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16606'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '117'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-b69d7bdb9-clnnd
      x-envoy-upstream-service-time:
      - '133'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999993'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_bf1d3ceff94a4913b40069f783127938
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[46990, 30779]], "model": "text-embedding-3-large", "dimensions":
      3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '103'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
        \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
        \   }\n  ],\n  \"model\": \"text-embedding-3-large\",\n  \"usage\": {\n    \"prompt_tokens\":
        2,\n    \"total_tokens\": 2\n  }\n}\n"
    headers:
      CF-RAY:
      - 98e3bbbade382510-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 14 Oct 2025 02:44:10 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=aV0_OkO.GH_2KP5qjaHe9Db1WeUqkO0a_Q7TDAc6Es4-1760409850-1.0.1.1-R83i0CYmRsnRqE5WYHEU0OEVI4KLXupdyj427FLqJlflKIYquqbfvAKsxl.Xw3l1N3o1Sq7mSjugRN3RA4uirJYqCMZF15kghDTNx9z2zHY;
        path=/; expires=Tue, 14-Oct-25 03:14:10 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=zscwAyd7YGrocHmi40fEYPGD_JjQsLYB0XhuzPF8Cbk-1760409850243-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      content-length:
      - '16606'
      openai-model:
      - text-embedding-3-large
      openai-organization:
      - user-xpjgvt8r6ahautifbt2prhie
      openai-processing-ms:
      - '82'
      openai-project:
      - proj_mvPOXsElPbT4Fz0z56XsH4tN
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-b69d7bdb9-wk4dw
      x-envoy-upstream-service-time:
      - '102'
      x-openai-proxy-wasm:
      - v0.1
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999998'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_48317c5f88484be3a30950cb4131bd9a
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e4034479136809-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:33:00 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=UbY8TfVbwk0rHxMnPfgATeQZel3qZdX0iY6NuG17jZk-1760412780-1.0.1.1-AeBBoZ6OCBm7f2J_w0DDK6etHY7i0OPqIx6vQbGKtWRcq3yyO.ybUmencoDmwgDlt6WK725qxTOkaNzfx75swUGtRmXjFUar3ImrSg2BjxY;
        path=/; expires=Tue, 14-Oct-25 04:03:00 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=TAbsEnLtkgdszR648C8T3hmVSKnlil.wTBum4tOEoaQ-1760412780308-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '0'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_a0d19742b1d146f7a80d22a620d1141a
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UbY8TfVbwk0rHxMnPfgATeQZel3qZdX0iY6NuG17jZk-1760412780-1.0.1.1-AeBBoZ6OCBm7f2J_w0DDK6etHY7i0OPqIx6vQbGKtWRcq3yyO.ybUmencoDmwgDlt6WK725qxTOkaNzfx75swUGtRmXjFUar3ImrSg2BjxY;
        _cfuvid=TAbsEnLtkgdszR648C8T3hmVSKnlil.wTBum4tOEoaQ-1760412780308-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e4034509bb6809-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:33:00 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '1'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_ce04529525284cf08f10f71cd37a7081
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["*.pyc\n__pycache__/\n.gitctx/"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '121'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e4062979f94705-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:34:58 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=sWIIXQP47DOcZ6Y1RuoRh2p3c__NzcWPkEtH9XMqtMY-1760412898-1.0.1.1-xNXYrtdjxiFnCPm1h7NKg3iPcGU9esprTlmeEcOLy_FNezDjWXnvOfcPxkVKD8sZxnDan5WsQxZrEOWVgGR6qT6UEWHwP8LJinvmzx6bVh4;
        path=/; expires=Tue, 14-Oct-25 04:04:58 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=7fSB.eRlMMguH_YaAyi8W4nCISdlh9Bg9Rt1mSeMj5w-1760412898850-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '1'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_3f74b3d1238344d7858bb8181f166398
    status:
      code: 401
      message: Unauthorized
- request:
    body: '{"input": ["print(\"Hello from gitctx test\")"], "model": "text-embedding-3-large",
      "dimensions": 3072, "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '125'
      content-type:
      - application/json
      cookie:
      - __cf_bm=sWIIXQP47DOcZ6Y1RuoRh2p3c__NzcWPkEtH9XMqtMY-1760412898-1.0.1.1-xNXYrtdjxiFnCPm1h7NKg3iPcGU9esprTlmeEcOLy_FNezDjWXnvOfcPxkVKD8sZxnDan5WsQxZrEOWVgGR6qT6UEWHwP8LJinvmzx6bVh4;
        _cfuvid=7fSB.eRlMMguH_YaAyi8W4nCISdlh9Bg9Rt1mSeMj5w-1760412898850-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - AsyncOpenAI/Python 2.2.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 2.2.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.3
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: "{\n    \"error\": {\n        \"message\": \"Incorrect API key provided:
        sk-test-key. You can find your API key at https://platform.openai.com/account/api-keys.\",\n
        \       \"type\": \"invalid_request_error\",\n        \"param\": null,\n        \"code\":
        \"invalid_api_key\"\n    }\n}\n"
    headers:
      CF-RAY:
      - 98e40629eb8f4705-SJC
      Connection:
      - keep-alive
      Content-Length:
      - '261'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Tue, 14 Oct 2025 03:34:58 GMT
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      vary:
      - Origin
      x-envoy-upstream-service-time:
      - '2'
      x-openai-proxy-wasm:
      - v0.1
      x-request-id:
      - req_553eb6d237e6420daf5b9670c2bc1c4b
    status:
      code: 401
      message: Unauthorized
version: 1
